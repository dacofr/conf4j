* Lancer eclipse avec tous les projets

* Ouvrir la class ConfElement

* Chercher les rÈfÈrences de
 devoxx_base_url
 devoxx_home_url -> SampleWithConf
 devoxx_agenda_url
 devoxx_unittest_url -> SampleWithConf

* Ouvrir la class SampleWithConf

* Checher les rÈfÈrence de getDevoxxUnitTest()
  -> ouvrir la classe SampleWithConfTest

* ExÈcuter les tests
  -> *Failed*
  -> montrer la conf dans la console

* Ajouter -Ddevoxx_base_url=http://test.devoxx.fr comme VM argument
  -> *Success*
  -> montrer la conf dans la console

* Ajouter -Dconfiguration_file=c:/Users/gdu/Desktop/conf4j.properties
  -> CrÈer un ficher conf4j.properties
  -> Supprimer -Ddevoxx_base_url=http://test.devoxx.fr
  -> Relancer le test
  -> *Failed*
  -> montrer la conf dans la console

* Editer c:/Users/gdu/Desktop/conf4j.properties
  -> ajouter devoxx_base_url=http://test.devoxx.fr
  -> Relancer le test
  -> *Success*
  -> montrer la conf dans la console

* Ouvrir le pom.xml du projet 'conf4j-service'
  -> monter la configuration du plugin 'maven-surefire-plugin'

* Executer 'mvn clean install'
  -> *Sucess*

* Editer la valeur de 'devoxx_base_url' dans le pom.xml du projet 'conf4j-service'
  -> *Failed*

* Deployer conf4j-webapp\target\conf4j.war dans un tomcat vierge

* Demarrer le tomcat

  ******************************************************************
  *
  *  Conf4jContextListener#contextInitialized [starting    ...]
  *
  *  Conf4jContextListener#contextInitialized [succeed]
  *
  ******************************************************************

* Ouvrir l'url 'http://localhost:8080/conf4j/'
  -> on voit les deux url 'http://localhost/display/FR12/Accueil' et 'http://localhost/display/FR12/UnitTest'

* Ouvrir l'url 'http://localhost:8080/conf4j/'
  -> comparer avec les valeurs dans la classe 'ConfElements'
  -> faire des reloads de la page 'http://localhost:8080/conf4j/' dans un autre onglet
  -> rafraichir 'http://localhost:8080/conf4j/'
  -> observer le compteur d'instance qui augmente

* Ouvrir l'url 'http://localhost:8080/conf4j/fulldump'
  -> rechercher 'java.io.tmpdir'

* Copier le fichier 'conf4j\target\conf4j_webapp.properties' dans 'apache-tomcat-7.0.27\conf\conf4j.properties'
  -> Èditer ce fichier
  -> 'config_dump=true'
  -> 'devoxx_base_url=http://www.devoxx.fr'

* Demarrer le tomcat

  ******************************************************************************************
  *
  *  Conf4jContextListener#contextInitialized [starting    ...]
  *
  ******************************************************************************************
  ## [CONFIG_FILE] System.out dump at startup for each variables declared as ConfElements
  ## expanded to 'true'
  ## access count 1
  config_dump=true

  (...)

* Ouvrir l'url 'http://localhost:8080/conf4j/unused' sans ouvrir 'http://localhost:8080/conf4j/'
  ------------------------------------------------------------------------------------------
  -------------------------------------- CHECK UNUSED --------------------------------------
  ------------------------------------------------------------------------------------------
  scope 'devoxx_home_url' seems to be unused for scope 'webapp'
  scope 'devoxx_base_url' seems to be unused for scope 'webapp'
  scope 'devoxx_agenda_url' seems to be unused for scope 'webapp'
  ------------------------------------------------------------------------------------------
  
* Ouvrir l'url 'http://localhost:8080/conf4j/scope' sans ouvrir 'http://localhost:8080/conf4j/'
  ----------------------------------------------------------------------------------------
  ------------------------------------- CHECK SCOPE --------------------------------------
  ----------------------------------------------------------------------------------------
  ----------------------------------------------------------------------------------------

* Ouvrir l'url 'http://localhost:8080/conf4j' puis rÈouvrir 'http://localhost:8080/conf4j/unused'
  ------------------------------------------------------------------------------------------
  -------------------------------------- CHECK UNUSED --------------------------------------
  ------------------------------------------------------------------------------------------
  scope 'devoxx_agenda_url' seems to be unused for scope 'webapp'
  ------------------------------------------------------------------------------------------
  
* rÈouvrir 'http://localhost:8080/conf4j/scope'
  ----------------------------------------------------------------------------------------
  ------------------------------------- CHECK SCOPE --------------------------------------
  ----------------------------------------------------------------------------------------
  scope 'webapp' not declared for ConfElement#devoxx_unittest_url and source 'DEFAULT'
  ----------------------------------------------------------------------------------------

* Arreter le tomcat et editer 'apache-tomcat-7.0.27\conf\conf4j.properties'
  -> renommer 'devoxx_base_url' en 'devoxx_base'

* Demarrer le tomcat
  ****************************************************************************************************************
  *
  *  Conf4jContextListener#contextInitialized [starting    ...]
  *
  ****************************************************************************************************************
  ****************************************************************************************************************
  *
  *  Conf4jContextListener#contextInitialized [failed]
  *
  *  org.conf4j.base.exception.ConfException: Variable 'devoxx_base' is not declared as ConfElements#devoxx_base
  *
  ****************************************************************************************************************


Todo:
* dump plus clean (one shot)
* Cadrer l'introduction:
** Maitrise de la configuration (single point)
** Système ancestral de la configuration : OS (pas de rechargement à chaud)
** Cycle de chargement, et traçabilité du chargement
** Ceci n'est pas Spring, CDI, une librairie, une roue, ...
** Ceci est un pattern pour générer un point de concentration des paramètres vitaux de votre application
** Implémentation pour facilité la vie du développeur : Pattern enum
** Configuration Driven Low Design


* Packages et Classes pour rendre compréhensible l'outillage




